{"version":3,"sources":["components/Header.tsx","components/Layout.tsx","modules/Sorter.ts","components/MemberPicture.tsx","components/ResultPicture.tsx","components/SortPage.tsx","NP_DB/members.csv","modules/NPDatabase.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","AppBar","position","style","color","backgroundColor","boxShadow","Toolbar","Typography","variant","flexGrow","fontWeight","this","props","children","IconButton","href","React","Component","Layout","Box","title","Container","UndefinedOrderError","Error","Sorter","array","items","prev_items","backable","_array","_lastChallenge","_currentRound","fordJohnson","arr","binaryInsertion","collection","item","length","compare","concat","result","pivot","left","right","Math","floor","splice","pairs","pairKeys","surplus","i","push","sorted_pairs","key","pair","insert_order","j","some","num","slice","shuffle","less","equal","greater","rounds","current","name","round","sqrt","e","console","error","JSON","parse","stringify","includes","log","String","notExist","addResult","val1","val2","addEqual","member","rank","continue_flag","dest","m","random","MemberPicture","styles","card","maxWidth","media","height","Card","onClick","CardActionArea","CardMedia","component","alt","image","CardContent","gutterBottom","ResultPicture","width","zoom","name_font_size","card_width","Grid","container","xs","justifyContent","paddingTop","paddingBottom","paddingLeft","paddingRight","textAlign","fontSize","SortPage","sort","members","state","rankTable","tweet_url","encodeURI","sortName","max_output","TableRow","TableCell","align","getResultPictures","min","max","alignItems","marginBottom","marginTop","currentRound","progress","md","TableContainer","Paper","Table","size","TableHead","TableBody","spacing","lastChallenge","setState","Button","back","alert","npDB","_members","memberName2ID","membername","Number","member_id","toString","fetchCSV","url","request","XMLHttpRequest","open","send","csv","responseText","columns","NP_DB_MEMBERS","TITLE","App","basename","process","exact","path","Home","NPAll","background","allStars","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148cc7bd.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HomeIcon from '@material-ui/icons/Home';\n\ninterface Props { }\n\ninterface State { }\n\nexport default class Header extends React.Component<Props, State> {\n  render() {\n    return (\n      <AppBar position=\"static\" style={{color: 'white', backgroundColor: \"rgb(255, 105, 180)\", boxShadow: \"none\"}}>\n        <Toolbar>\n          <Typography variant=\"h5\" style={{flexGrow: 1, fontWeight: 500}}>{this.props.children}</Typography>\n          <IconButton\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            href=\"./home\"\n          >\n            <HomeIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { Box, Container } from \"@material-ui/core/\";\ninterface Props {\n  title?: string;\n}\n\ninterface State {}\n\nexport default class Layout extends React.Component<Props, State> {\n  render() {\n    return (\n      <Box>\n        <Header>{this.props.title}</Header>\n        <Container><div>{this.props.children}</div></Container>\n      </Box>\n    );\n  }\n}","// インターフェイス\ninterface Member {\n    less: string[];\n    equal: string[];\n    greater: string[];\n}\n\ninterface MemberDictionary {\n    [id: string]: Member;\n}\n\n// ユーザー定義の例外\nclass UndefinedOrderError extends Error {}\n\n// ソートのクラス\nexport default class Sorter {\n    items: MemberDictionary = {};\n    prev_items: MemberDictionary = {};\n    backable: boolean = false;\n    protected _array: string[];\n    protected _lastChallenge: string[] = [];\n    protected _currentRound: number = 0;\n\n    constructor(array: string[]) {\n        this._array = this.shuffle(array);\n        for (let item of this._array) {\n            this.items[item] = {\n                less: [],\n                equal: [],\n                greater: []\n            }\n        }\n    }\n\n    get progress() {\n        const rounds = this._array.length * (this._array.length - 1);\n        let current = 0;\n        for (let name of this._array) {\n            current += this.items[name].equal.length;\n            current += this.items[name].greater.length;\n            current += this.items[name].less.length;\n        }\n        return Math.round(Math.sqrt(current / rounds) * 100 * 10) / 10;\n    }\n\n    get array() {\n        return this._array;\n    }\n\n    get lastChallenge() {\n        return this._lastChallenge;\n    }\n\n    get currentRound() {\n        return this._currentRound;\n    }\n\n    // ソートに成功したらtrueを返す\n    sort() {\n        try {\n            // ソート関数の指定。ここを変えれば、他のソートアルゴリズムに変更出来る\n            this._array = this.fordJohnson(this._array.concat());\n            return true;\n        } catch (e) {\n            if (e instanceof UndefinedOrderError) {\n                this._currentRound++;\n                return false;\n            } else {\n                console.error(e);\n                return false;\n            }\n        }\n    }\n\n    back() {\n        this.items = JSON.parse(JSON.stringify(this.prev_items));\n        this.backable = false;\n        this._currentRound = this._currentRound - 2;\n    }\n\n    addResult(greater: string, less: string) {\n        if (!(this._array.includes(less) && this._array.includes(greater))) {\n            console.log(this._array)\n            throw new Error(\"不正な値です\" + String(less) + \"/\" + String(greater));\n        }\n        if (less === greater) { return }\n        // less側\n        if (this.notExist(greater, less)) {\n            this.items[less].greater.push(greater);\n            for (let item of this.items[less].equal) {\n                this.addResult(greater, item);\n            }\n            for (let item of this.items[less].less) {\n                this.addResult(greater, item);\n            }\n        }\n\n        // greater側\n        if (this.notExist(less, greater)) {\n            this.items[greater].less.push(less);\n            for (let item of this.items[greater].equal) {\n                this.addResult(item, less);\n            }\n            for (let item of this.items[greater].greater) {\n                this.addResult(item, less);\n            }\n        }\n    }\n\n    addEqual(val1: string, val2: string) {\n        // バリデーション\n        if (!(this._array.includes(val1) && this._array.includes(val2))) {\n            throw new Error(\"不正な値です\");\n        }\n        if (val1 === val2) { return }\n        // equalの追加\n        if (this.notExist(val2, val1)) {\n            this.items[val1].equal.push(val2);\n            for (let item of this.items[val1].equal) {\n                this.addEqual(item, val2);\n            }\n        }\n        if (this.notExist(val1, val2)) {\n            this.items[val2].equal.push(val1);\n            for (let item of this.items[val2].equal) {\n                this.addEqual(item, val1);\n            }\n        }\n\n        // 大小情報の同期\n        for (let item of this.items[val1].greater) {\n            this.addResult(item, val2);\n        }\n        for (let item of this.items[val1].less) {\n            this.addResult(val2, item);\n        }\n        for (let item of this.items[val2].greater) {\n            this.addResult(item, val1);\n        }\n        for (let item of this.items[val2].less) {\n            this.addResult(val1, item);\n        }\n    }\n\n    // TODO: つくる\n    rank(member: string) {\n        let rank = 1;\n        let continue_flag = true;\n        for (let i = 0; i < this.array.length && continue_flag; i++) {\n            continue_flag = this.array[i] !== member\n            if (i > 0) {\n                if (this.items[this.array[i]].equal.includes(this.array[i - 1])) {\n                    continue;\n                }\n            }\n            rank = i + 1;\n        }\n        return rank;\n    }\n\n    private notExist(item: string, dest: string) {\n        return (\n            !(this.items[dest].equal.includes(item) || this.items[dest].greater.includes(item) || this.items[dest].less.includes(item))\n        );\n    }\n\n    protected shuffle([...arr]) {\n        let m = arr.length;\n        while (m) {\n            const i = Math.floor(Math.random() * m--);\n            [arr[m], arr[i]] = [arr[i], arr[m]];\n        }\n        return arr;\n    };\n\n    // 大小を比較する（情報不足で比較出来なかった場合は例外を吐く）\n    protected compare(greater: string, less: string) {\n        this._lastChallenge = [greater, less];\n        if (greater === less) {\n            return false;\n        }\n        if (this.items[greater].less.includes(less)) {\n            return true;\n        } else if (this.items[greater].equal.includes(less) || this.items[greater].greater.includes(less)) {\n            return false;\n        } else {\n            throw new UndefinedOrderError();\n        }\n    }\n\n    protected fordJohnson = (arr: string[]): string[] => {\n        // Jacobsthal配列\n        const JACOBSTHAL = [1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, 5461, 10923, 21845, 43691, 87381, 174763, 349525];\n\n        // 二分挿入\n        const binaryInsertion = (collection: string[], item: string): string[] => {\n            if (collection.length === 1) {\n                if (this.compare(item, collection[0])) {\n                    return [item, collection[0]].concat();\n                } else {\n                    return [collection[0], item].concat();\n                }\n            } else if (collection.length === 2) {\n                if (this.compare(item, collection[0])) {\n                    return [item].concat(collection);\n                } else if (this.compare(item, collection[1])) {\n                    return [collection[0], item, collection[1]].concat();\n                } else {\n                    return collection.concat([item]);\n                }\n            }\n\n            let result: string[] = [];\n            let pivot = 0;\n            let left = 0;\n            let right = collection.length - 1;\n\n            while (left < right - 1) {\n                pivot = Math.floor((left + right) / 2);\n                if (this.compare(item, collection[pivot])) {\n                    right = pivot;\n                } else {\n                    left = pivot;\n                }\n            }\n            result = collection;\n\n            if (left === 0) {\n                if (this.compare(item, collection[left])) {\n                    return [item].concat(result);\n                }\n            }\n\n            if (right === collection.length - 1) {\n                if (this.compare(collection[right], item)) {\n                    return result.concat([item]);\n                }\n            }\n\n            result.splice(right, 0, item);\n            return result;\n        }\n\n        // 長さが2未満ならそのまま返却、2なら入れ替えて返却\n        if (arr.length < 2) {\n            return arr.concat();\n        } else if (arr.length === 2) {\n            if (this.compare(arr[0], arr[1])) {\n                return [arr[0], arr[1]].concat();\n            } else {\n                return [arr[1], arr[0]].concat();\n            }\n        }\n\n        let pairs: string[][] = [];\n        let pairKeys: string[] = [];\n        let surplus: string[] = [];\n\n        // ペアをつくる\n        for (let i = 0; i < arr.length; i = i + 2) {\n            if (i === arr.length - 1) {\n                surplus.push(arr[i]);\n            } else if (this.compare(arr[i], arr[i + 1])) {\n                pairs.push([arr[i + 1], arr[i]]);\n                pairKeys.push(arr[i + 1]);\n            } else {\n                pairs.push([arr[i], arr[i + 1]]);\n                pairKeys.push(arr[i]);\n            }\n        }\n\n        // ペアをソートする\n        let sorted_pairs: string[][] = [];\n        pairKeys = this.fordJohnson(pairKeys);\n        for (let key of pairKeys) {\n            for (let pair of pairs) {\n                if (pair[0] === key) {\n                    sorted_pairs.push(pair);\n                    break;\n                }\n            }\n        }\n        let result = pairKeys;\n\n        // 最適な順序で挿入していく\n        let insert_order: number[] = [];\n        for (let i of JACOBSTHAL) {\n            i = i - 1;\n            if (i >= sorted_pairs.length) {\n                for (let j = sorted_pairs.length - 1; j >= 0; j--) {\n                    if (!insert_order.some(num => num === j)) {\n                        insert_order.push(j);\n                    }\n                }\n                break;\n            }\n            insert_order.push(i);\n            for (let j = i; j >= 0; j--) {\n                if (!insert_order.some(num => num === j)) {\n                    insert_order.push(j);\n                }\n            }\n        }\n\n        for (let i of insert_order) {\n            let pair = sorted_pairs[i];\n            let pivot: number;\n            for (pivot = 0; pivot < result.length; pivot++) {\n                if (result[pivot] === pair[0]) {\n                    break;\n                }\n            }\n\n            if (pivot === 0) {\n                result = [pair[1]].concat(result);\n            } else {\n                result = binaryInsertion(result.slice(0, pivot), pair[1]).concat(result.slice(pivot));\n            }\n        }\n\n        if (surplus.length > 0) {\n            result = binaryInsertion(result, surplus[0]);\n        }\n\n        return result;\n    }\n}","import React from \"react\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\ninterface Props {\n    name: string;\n    onClick?: any;\n}\n\ninterface State { }\n\nexport default class MemberPicture extends React.Component<Props, State> {\n    render() {\n        const styles =\n        {\n            card: {\n                maxWidth: 345,\n            },\n            media: {\n                height: \"300px\"\n            }\n        };\n\n        let img_dir = \"member_pics/\";\n\n        return (\n            <Card onClick={this.props.onClick} style={styles.card}>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        alt={this.props.name}\n                        image={`${img_dir}${this.props.name}.jpg`}\n                        title=\"Contemplative Reptile\"\n                        style={styles.media}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            {this.props.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, GridSize } from \"@material-ui/core\";\n\ninterface Props {\n    name: string;\n    rank: number;\n}\n\ninterface State { }\n\nexport default class ResultPicture extends React.Component<Props, State> {\n    render() {\n        let img_dir = \"member_pics/\";\n\n        const styles =\n        {\n            media: {\n                width: 96,\n                height: 96,\n                zoom: 1\n            }\n        };\n\n        let name_font_size = 14;\n        let card_width: GridSize = 4;\n\n        if (this.props.rank === 1) {\n            styles.media.width *= 3;\n            styles.media.height *= 3;\n            name_font_size += 2;\n            card_width = 12;\n        } else if (this.props.rank <= 3) {\n\n            styles.media.width *= 3 / 2;\n            styles.media.height *= 3 / 2;\n            name_font_size += 1;\n            card_width = 6;\n        } else if (this.props.rank >= 7) {\n            styles.media.width *= 8 / 9;\n            name_font_size -= 2;\n            card_width = 3;\n        }\n\n        return (\n            <Grid container item xs={card_width} justifyContent=\"center\">\n                <Box m={0.5}>\n                    <Card>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.props.name}\n                            image={`${img_dir}${this.props.name}.jpg`}\n                            title=\"Contemplative Reptile\"\n                            style={styles.media}\n                        />\n                        <CardContent style={{ paddingTop: 8, paddingBottom: 8, paddingLeft: 5, paddingRight: 5, textAlign: \"center\" }}>\n                            <Typography component=\"p\" style={{ fontSize: name_font_size }}>\n                                {this.props.rank}位\n                            </Typography>\n                            <Typography component=\"p\" style={{ fontSize: name_font_size }}>\n                                {this.props.name}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Box>\n            </Grid>\n        );\n    }\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Sorter from \"../modules/Sorter\";\nimport MemberPicture from \"./MemberPicture\";\nimport ResultPicture from \"./ResultPicture\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\ninterface Props {\n  members: string[];\n  sortName: string;\n}\ninterface State {\n  result: boolean;\n}\n\nexport default class SortPage extends React.Component<Props, State> {\n  sort: Sorter;\n  constructor(props: Props) {\n    super(props);\n    this.sort = new Sorter(props.members);\n    this.state = { result: this.sort.sort() };\n  }\n  render() {\n    if (this.state.result) {\n      let rankTable: JSX.Element[] = [];\n      let tweet_url: string = \"https://twitter.com/intent/tweet?text=\" + encodeURI(`${this.props.sortName}結果\\n`);\n      let max_output = 10;\n      if (this.props.members.length < 10) {\n        max_output = 3;\n      } else if (this.props.members.length < 20) {\n        max_output = 5;\n      }\n\n      for (let i of this.sort.array) {\n        rankTable.push(<TableRow key={i}><TableCell align=\"left\">{this.sort.rank(i)}位</TableCell><TableCell align=\"left\">{i}</TableCell></TableRow>);\n        if (this.sort.rank(i) <= max_output) {\n          tweet_url += encodeURI(`${this.sort.rank(i)}位: ${i}\\n`);\n        }\n      }\n\n      const getResultPictures = (min: Number, max: Number) => {\n        const result: JSX.Element[] = [];\n        for (let i of this.sort.array) {\n          if (this.sort.rank(i) >= min && this.sort.rank(i) <= max) {\n            result.push(\n              <ResultPicture key={i} name={i} rank={this.sort.rank(i)}></ResultPicture>\n            );\n          }\n        }\n        return result;\n      }\n\n      tweet_url += \"&hashtags=\" + encodeURI(\"ハロプロソート\") + \"&url=\" + encodeURI(\"https://16be.at/sort/\");\n      console.log(tweet_url);\n      return <Grid container alignItems=\"flex-start\">\n        <Grid container item xs={12} justifyContent=\"center\">\n          <h2 style={{ marginBottom: 0 }}>{this.props.sortName}結果</h2>\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <p style={{ marginTop: 0, marginBottom: 10 }}>ラウンド{this.sort.currentRound} - {this.sort.progress}%</p>\n        </Grid>\n        <Grid container item md={6} xs={12} justifyContent=\"center\">\n          <Grid container item xs={12} justifyContent=\"center\">\n            {getResultPictures(1, 1)}\n          </Grid>\n          <Grid container item xs={12} justifyContent=\"center\">\n            {getResultPictures(2, 3)}\n          </Grid>\n          <Grid container item xs={12} justifyContent=\"center\">\n            {getResultPictures(4, 6)}\n          </Grid>\n          <Grid container item xs={12} justifyContent=\"center\">\n            {getResultPictures(7, 10)}\n          </Grid>\n        </Grid>\n\n        <Grid container item md={6} xs={12} justifyContent=\"center\">\n          <TableContainer component={Paper}>\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow style={{ backgroundColor: \"#444\" }}>\n                  <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>順位</TableCell>\n                  <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>名前</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rankTable}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <br />\n          {/* <p>\n            <Button href={tweet_url} target=\"_blank\" variant=\"contained\" size=\"large\" style={{ backgroundColor: \"#00ACEE\", color: \"#ffffff\" }}><FontAwesomeIcon icon={faTwitter} />&nbsp;結果をツイート</Button>\n          </p> */}\n        </Grid>\n      </Grid>\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <Grid container spacing={1}>\n            <Grid container item xs={12} justifyContent=\"center\">\n              <h2 style={{ marginBottom: 0 }}>{this.props.sortName}</h2>\n            </Grid>\n            <Grid container item xs={12} justifyContent=\"center\">\n              <p style={{ marginTop: 0, marginBottom: 5 }}>ラウンド{this.sort.currentRound} - {this.sort.progress}%</p>\n            </Grid>\n            <Grid container item xs={6} justifyContent=\"center\">\n              <MemberPicture name={this.sort.lastChallenge[0]}\n                onClick={() => {\n                  this.sort.backable = true;\n                  this.sort.prev_items = JSON.parse(JSON.stringify(this.sort.items));\n                  this.sort.addResult(this.sort.lastChallenge[0], this.sort.lastChallenge[1]);\n                  this.setState({ result: this.sort.sort() });\n                }} />\n            </Grid>\n            <Grid container item xs={6} justifyContent=\"center\">\n              <MemberPicture name={this.sort.lastChallenge[1]}\n                onClick={() => {\n                  this.sort.backable = true;\n                  this.sort.prev_items = JSON.parse(JSON.stringify(this.sort.items));\n                  this.sort.addResult(this.sort.lastChallenge[1], this.sort.lastChallenge[0]);\n                  this.setState({ result: this.sort.sort() });\n                }} />\n            </Grid>\n            <Grid container item xs={12} justifyContent=\"center\">\n              <Button variant=\"contained\" size=\"large\" style={{ backgroundColor: \"white\", color: \"#444\" }}\n                onClick={() => {\n                  this.sort.backable = true;\n                  this.sort.prev_items = JSON.parse(JSON.stringify(this.sort.items));\n                  this.sort.addEqual(this.sort.lastChallenge[0], this.sort.lastChallenge[1]);\n                  this.setState({ result: this.sort.sort() });\n                }}\n              >\n                両方勝ち\n              </Button>\n            </Grid>\n            <Grid container item xs={12} justifyContent=\"center\">\n              <Button size=\"large\" style={{ backgroundColor: \"#444\", color: \"white\" }}\n                onClick={() => {\n                  if (this.sort.backable) {\n                    this.sort.back();\n                    this.setState({ result: this.sort.sort() });\n                  } else {\n                    alert(\"これ以上戻れません！\")\n                  }\n                }}\n              >\n                ひとつ戻る\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      );\n    }\n  }\n}","export default __webpack_public_path__ + \"static/media/members.1edd5d76.csv\";","import parse from \"csv-parse/lib/sync\";\nimport NP_DB_MEMBERS from \"../NP_DB/members.csv\";\n\n// インターフェイス\ninterface Member {\n    member_id: string;\n    name: string;\n    birth_date: string;\n    birth_place: string;\n    mbti: string;\n    height: string;\n    hobby: string;\n    special_skill: string;\n}\n\nclass NPDatabase {\n    private _members: Member[] = [];\n\n    constructor() {\n        this._members = this.fetchCSV(NP_DB_MEMBERS);\n    }\n\n    get allStars(): string[] {\n        let members: string[] = [];\n        let result: string[] = [];\n        for (let i of this._members) {\n            result.push(i.name);\n        }\n        return result;\n    }\n\n    memberName2ID = (membername: string): string => {\n        let result = 0;\n        for (let i of this._members) {\n            if (i.name === membername) {\n                result = Number(i.member_id);\n            }\n        }\n        return result.toString();\n    }\n\n    // CSVを取得する\n    private fetchCSV = (url: string): any[] => {\n        const request = new XMLHttpRequest();\n        request.open(\"GET\", url, false);\n        request.send(null);\n        const csv = request.responseText;\n        return parse(csv, { columns: true });\n    }\n}\n\nconst npDB = new NPDatabase();\nexport default npDB;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./App.css\";\n\nimport Layout from \"./components/Layout\";\nimport SortPage from \"./components/SortPage\";\nimport npDB from \"./modules/NPDatabase\";\n\ninterface Props { }\ninterface State {\n  result: boolean;\n  round: number;\n}\n\nconst TITLE = \"日プソート\";\n\nexport default class App extends React.Component<Props, State> {\n  render() {\n    return (\n      <Layout title={TITLE}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/np\" component={NPAll} />\n        </Router>\n      </Layout>\n    );\n  }\n}\n\nclass Home extends React.Component<Props, State> {\n  render() {\n    function helpAlert() {\n      alert(\"選択を繰り返すことで自分だけのランキングを作ることができます。\\n今まで気づかなかった「好き」を再発見するためにご利用ください。\\nソートの結果はあなたにとってのランキングであり、メンバーの優劣を意味しません。\")\n    }\n    return (\n      <Grid container item xs={12} justifyContent=\"center\" style={{ textAlign: \"center\" }} spacing={1}>\n        <Grid container item xs={12} justifyContent=\"center\" spacing={0}>\n          <h1>{TITLE}</h1>\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\" spacing={0}>\n          <p>(最終更新:23/10/27 初リリース)</p>\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\" spacing={0}>\n          <p><a href=\"./\" onClick={helpAlert}>🔰日プソートとは？🔰</a><br></br><br></br></p>\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\"><Button href=\"np\" style={{ background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)', color: 'white', fontWeight: 'bold', height: 32 }}>全員ソート</Button></Grid>\n        <Grid container item xs={12} justifyContent=\"center\" spacing={0}>\n          <p><a href=\"https://github.com/emolga587/hpsort2\">ハロプロソート(updated)</a>ベースで開発しています。</p>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nclass NPAll extends React.Component<Props, State> {\n  render() {\n    return <div><SortPage members={npDB.allStars} sortName=\"日プソート\" /></div>;\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}